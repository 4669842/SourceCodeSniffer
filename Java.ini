#Place the higher risk commands at the top of the file -  Sort from High risk to Low risk
[Java Command Injection 1]
Comment: Potential Command Injection
Regex: (Runtime\.exec)
Message: JAVA reference to a potential Command Injection
Confidence: Low
RiskLevel: 3
[Java Command Injection 2]
Comment: Potential Command Injection
Regex: (Runtime\.getRuntime)
Message: JAVA reference to a potential Command Injection
Confidence: Low
RiskLevel: 3
[Java Database Connection]
Comment: Potential Command Injection
Regex: (DriverManager\.getConnection)
Message: JAVA reference to a database connection. Check for hard-coded credentials.
Confidence: Low
RiskLevel: 1
[Java XSS 1]
Comment: Potential XSS
Regex: (PrintWriter)
Message: Java reference to a potential XSS
Action: Ensure the input from user is not being passed back as output without being sanitized
Explanation: Cross-site scripting (XSS) attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application reflects user input without validation or encoding.
CWE: CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
References: https://cwe.mitre.org/data/definitions/79.html,https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
Confidence: Low
RiskLevel: 1
[Java XSS 2]
Comment: Potential XSS
Regex: (org\.apache\.struts\.action)
Message: Java reference to a potential XSS
Action: Ensure the input from user is not being passed back as output without being sanitized
Explanation: Cross-site scripting (XSS) attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application reflects user input without validation or encoding.
CWE: CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
References: https://cwe.mitre.org/data/definitions/79.html,https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
Confidence: Low
RiskLevel: 1
[Java XSS 3]
Comment: Potential XSS
Regex: (ActionMessage)
Message: Java reference to a potential XSS
Action: Ensure the input from user is not being passed back as output without being sanitized
Explanation: Cross-site scripting (XSS) attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. Flaws that allow these attacks to succeed are quite widespread and occur anywhere a web application reflects user input without validation or encoding.
CWE: CWE-79 - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')
References: https://cwe.mitre.org/data/definitions/79.html,https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet
Confidence: Low
RiskLevel: 1

