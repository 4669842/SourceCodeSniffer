#Place the higher risk commands at the top of the file -  Sort from High risk to Low risk
[CSharp Command Injection 1]
Comment: Potential Command Injection
Regex: (=\s+new\s+Process)
Message: C# reference to a potential Command Injection
Confidence: Low
RiskLevel: 1
[CSharp Command Injection 2]
Comment: Potential Command Injection
Regex: (=\snew\sProcessStartInfo)
Message: C# reference to a potential Command Injection
Confidence: Low
RiskLevel: 1
[CSharp Command Injection 3]
Comment: Potential Command Injection
Regex: (new\s+System\.Diagnostics\.Process\()
Message: C# reference to a potential Command Injection
Confidence: Low
RiskLevel: 1
[CSharp Command Injection 4]
Comment: Potential Command Injection
Regex: (\.StartInfo\.FileName\s+=)
Message: C# reference to a potential Command Injection
Confidence: Low
RiskLevel: 1
[CSharp Command Injection 6]
Comment: Potential Command Injection
Regex: (System\.Diagnostics\.Process\.Start)
Message: C# reference to a potential Command Injection
Confidence: Low
RiskLevel: 1
[CSharp SQL Injection 1]
Comment: Csharp Potential SQL Injection Injection
Regex: (new\s+SqlConnection\()
Message: C# reference to a potential SQL Injection
Confidence: Low 
RiskLevel: 1
[CSharp SQL Injection 2]
Comment: Csharp Potential SQL Injection Injection
Regex: (new\s+SqlCommand\()
Message: C# reference to a potential SQL Injection
Confidence: Low
RiskLevel: 1
